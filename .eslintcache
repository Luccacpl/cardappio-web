[{"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Cardapio\\Cardapio.tsx":"1","D:\\Estudo\\TCC\\Cardappio\\web\\src\\routes.tsx":"2","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Login\\Login.tsx":"3","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Mesas\\Mesas.tsx":"4","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Mesas\\style.ts":"5","D:\\Estudo\\TCC\\Cardappio\\web\\src\\App.tsx":"6","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Comandas\\style.ts":"7","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Cardapio\\style.ts":"8","D:\\Estudo\\TCC\\Cardappio\\web\\src\\services\\api.ts":"9","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Grid\\style.ts":"10","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Linha\\style.ts":"11","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Text\\text.ts":"12","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\SubAside\\SubAside.tsx":"13","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Container\\Container.tsx":"14","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Button\\Button.tsx":"15","D:\\Estudo\\TCC\\Cardappio\\web\\src\\utils\\fontSizes.ts":"16","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\CardsCommand\\index.tsx":"17","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Cards\\Cards.tsx":"18","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Login\\styles.ts":"19","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Comandas\\Comandas.tsx":"20","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Pedidos\\Pedidos.tsx":"21","D:\\Estudo\\TCC\\Cardappio\\web\\src\\index.tsx":"22","D:\\Estudo\\TCC\\Cardappio\\web\\src\\utils\\colors.ts":"23","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Pedidos\\style.ts":"24","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\CardsOrder\\style.ts":"25","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\CardsOrder\\index.tsx":"26","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\SubAside\\style.ts":"27","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Aside\\Aside.tsx":"28","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Modal\\Modal.tsx":"29","D:\\Estudo\\TCC\\Cardappio\\web\\src\\utils\\dimensions.ts":"30","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\SearchInput\\style.ts":"31","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Cadastro\\Cadastro.tsx":"32","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Button\\style.ts":"33","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Client\\style.tsx":"34","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Client\\Client.tsx":"35","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\QrScan\\QrScan.tsx":"36","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Loader\\style.ts":"37","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\ClientCardapio\\style.tsx":"38","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\ClientCardapio\\ClientCardapio.tsx":"39","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Cards\\style.ts":"40","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Inicio\\Inicio.tsx":"41","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\CardsCommand\\style.ts":"42","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\DeleteModal\\index.tsx":"43","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\ClientCommand\\style.ts":"44","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\ClientCommand\\ClientCommand.tsx":"45","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\MenuMobile\\style.ts":"46","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Modal\\style.ts":"47"},{"size":28603,"mtime":1623638569299,"results":"48","hashOfConfig":"49"},{"size":1701,"mtime":1623616140323,"results":"50","hashOfConfig":"49"},{"size":4145,"mtime":1623280626600,"results":"51","hashOfConfig":"49"},{"size":10008,"mtime":1623619857837,"results":"52","hashOfConfig":"49"},{"size":744,"mtime":1623623383688,"results":"53","hashOfConfig":"49"},{"size":155,"mtime":1610997248485,"results":"54","hashOfConfig":"49"},{"size":649,"mtime":1619719348029,"results":"55","hashOfConfig":"49"},{"size":637,"mtime":1619457453393,"results":"56","hashOfConfig":"49"},{"size":186,"mtime":1623620316279,"results":"57","hashOfConfig":"49"},{"size":903,"mtime":1619624151457,"results":"58","hashOfConfig":"49"},{"size":151,"mtime":1619559892689,"results":"59","hashOfConfig":"49"},{"size":2254,"mtime":1622755108414,"results":"60","hashOfConfig":"49"},{"size":1828,"mtime":1622916015752,"results":"61","hashOfConfig":"49"},{"size":1369,"mtime":1619624077664,"results":"62","hashOfConfig":"49"},{"size":738,"mtime":1622431211439,"results":"63","hashOfConfig":"49"},{"size":445,"mtime":1615088436052,"results":"64","hashOfConfig":"49"},{"size":1902,"mtime":1623451820097,"results":"65","hashOfConfig":"49"},{"size":1846,"mtime":1623518951330,"results":"66","hashOfConfig":"49"},{"size":1250,"mtime":1616196638047,"results":"67","hashOfConfig":"49"},{"size":8624,"mtime":1623528220956,"results":"68","hashOfConfig":"49"},{"size":3162,"mtime":1623512164312,"results":"69","hashOfConfig":"49"},{"size":199,"mtime":1610389676171,"results":"70","hashOfConfig":"49"},{"size":441,"mtime":1616540157046,"results":"71","hashOfConfig":"49"},{"size":649,"mtime":1622920269863,"results":"72","hashOfConfig":"49"},{"size":2383,"mtime":1622922326209,"results":"73","hashOfConfig":"49"},{"size":1905,"mtime":1623372919350,"results":"74","hashOfConfig":"49"},{"size":4468,"mtime":1619573916438,"results":"75","hashOfConfig":"49"},{"size":3913,"mtime":1623616600159,"results":"76","hashOfConfig":"49"},{"size":1067,"mtime":1621894700671,"results":"77","hashOfConfig":"49"},{"size":993,"mtime":1615588374571,"results":"78","hashOfConfig":"49"},{"size":1373,"mtime":1616468662536,"results":"79","hashOfConfig":"49"},{"size":5956,"mtime":1619705642396,"results":"80","hashOfConfig":"49"},{"size":1596,"mtime":1622431205052,"results":"81","hashOfConfig":"49"},{"size":1253,"mtime":1623285594635,"results":"82","hashOfConfig":"49"},{"size":1310,"mtime":1623528176603,"results":"83","hashOfConfig":"49"},{"size":1229,"mtime":1623622085896,"results":"84","hashOfConfig":"49"},{"size":3075,"mtime":1623606822018,"results":"85","hashOfConfig":"49"},{"size":856,"mtime":1623528034829,"results":"86","hashOfConfig":"49"},{"size":3016,"mtime":1623622551169,"results":"87","hashOfConfig":"49"},{"size":2452,"mtime":1623288577281,"results":"88","hashOfConfig":"49"},{"size":810,"mtime":1619462486886,"results":"89","hashOfConfig":"49"},{"size":2542,"mtime":1623453487786,"results":"90","hashOfConfig":"49"},{"size":1129,"mtime":1623450050093,"results":"91","hashOfConfig":"49"},{"size":2728,"mtime":1623532997228,"results":"92","hashOfConfig":"49"},{"size":6033,"mtime":1623622587049,"results":"93","hashOfConfig":"49"},{"size":275,"mtime":1623527800375,"results":"94","hashOfConfig":"49"},{"size":1983,"mtime":1622429430944,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},"ip8uqi",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"125"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"125"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"131"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Cardapio\\Cardapio.tsx",["205","206","207","208","209","210"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nimport Aside from \"../../components/Aside/Aside\";\r\nimport SubAside from \"../../components/SubAside/SubAside\";\r\nimport Cards from \"../../components/Cards/Cards\";\r\nimport Container from \"../../components/Container/Container\";\r\nimport { Grid } from \"../../components/Grid/style\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Logo from \"../../public/icons/logo-bk-white.svg\";\r\nimport Food from \"../../public/icons/fast-food-outline.svg\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport DeleteModal from '../../components/DeleteModal/index'\r\n\r\nimport { ChangeEventHandler } from \"react\";\r\nimport { Input } from \"components/Input/Input\";\r\nimport { DragFileArea } from \"./style\";\r\nimport { Add } from \"react-ionicons\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Loader from \"components/Loader\";\r\n\r\nimport { LiMenu } from \"../../components/SubAside/style\";\r\nimport { TrashOutline, CreateOutline } from \"react-ionicons\";\r\nimport Select from 'react-select'\r\n\r\ninterface ICategory {\r\n  name: string;\r\n  id: number;\r\n  items: IItem[];\r\n}\r\n\r\ninterface IDeleteCategory {\r\n  id: number\r\n  isActive?: boolean\r\n  name: string\r\n}\r\n\r\ninterface IItem {\r\n  isActive?: boolean;\r\n  name: string;\r\n  id: number;\r\n  desc: string;\r\n  imageurl: string;\r\n  category_id: string;\r\n  available: string;\r\n  price: number;\r\n}\r\n\r\ninterface IShowModal {\r\n  isActive: boolean;\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nfunction Cardapio() {\r\n\r\n  const customStyles = {\r\n    control: (base: any, state: any) => ({\r\n      ...base,\r\n      // background: \"#2C2C2C\",\r\n      width: \"55%\",\r\n      height: \"60px\",\r\n      fontColor: \"white\",\r\n      fontSize: \"16px\",\r\n      // match with the menu\r\n      borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\r\n      // Overwrittes the different states of border\r\n      // borderColor: state.isFocused ? \"yellow\" : \"green\",\r\n      // Removes weird border around container\r\n      boxShadow: state.isFocused ? null : null,\r\n      \"&:hover\": {\r\n        // Overwrittes the different states of border\r\n        borderColor: state.isFocused ? null : null\r\n      }\r\n    }),\r\n    menu: (base: any) => ({\r\n      ...base,\r\n      // override border radius to match the box\r\n      borderRadius: 0,\r\n      // kill the gap\r\n      marginTop: 0,\r\n      width: \"55%\",\r\n      fontSize: \"16px\"\r\n      // background: \"#2C2C2C\",\r\n      // color: \"white\"\r\n    }),\r\n    menuList: (base: any) => ({\r\n      ...base,\r\n      // kill the white space on first and last option\r\n      padding: 0,\r\n      fontSize: \"16px\"\r\n      // background: \"#2C2C2C\",\r\n      // color: \"white\"\r\n    })\r\n  };\r\n\r\n\r\n  const history = useHistory()\r\n\r\n  const [showDeleteModal, setShowDeleteModal] = useState<IDeleteCategory>({ id: 0, name: '', isActive: false })\r\n  const [showLoader, setShowLoader] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModalCreate, setShowModalCreate] = useState(false);\r\n  const [showModalEdit, setShowModalEdit] = useState<IShowModal>({ id: 0, isActive: false, name: '' });\r\n  const [showModalEditItem, setShowModalEditItem] = useState<IItem>({\r\n    id: 0,\r\n    isActive: false,\r\n    name: '',\r\n    desc: '',\r\n    imageurl: '',\r\n    available: '',\r\n    category_id: '',\r\n    price: 0\r\n  });\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const [nameItem, setNameItem] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [priceItem, setPrice] = useState(\"\");\r\n  const [available, setAvailable] = useState(true)\r\n  const [categoryOptions, setCategoryOptions] = useState<any>([])\r\n  const [categoryOptionsId, setCategoryOptionsId] = useState<any>('')\r\n\r\n  const [categories, setCategories] = useState<ICategory[]>([]);\r\n  const [items, setItems] = useState<IItem[]>([]);\r\n  const [selectedFile, setSelectedFile] = useState<any>([]);\r\n\r\n  const [refresh, setRefresh] = useState(0);\r\n\r\n  const [step, setStep] = useState(0);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filteredItems, setFilteredItems] = useState<IItem[]>([]);\r\n\r\n  const [resposta, setResposta] = useState(0)\r\n\r\n  const [filteredCategory, setFilteredCategory] = useState<ICategory>()\r\n\r\n  var nomeCategoria = window.localStorage.getItem('CATEGORYNAME')\r\n\r\n\r\n  const onSearch = (e: string) => {\r\n    const searchText = e.toLowerCase();\r\n    const newSearch = items.filter(({ name, desc }) =>\r\n      name?.toLowerCase().includes(searchText) ||\r\n      desc?.toLowerCase().includes(searchText)\r\n    );\r\n\r\n    var teste = categories.filter(({ items }) => items.filter(({ name, desc }) =>\r\n      name?.toLowerCase().includes('Gabi')\r\n      // desc?.toLowerCase().includes(searchText)\r\n    ))\r\n\r\n    const filtro = categories.map(category => (category.items.filter(item => item.name.toLowerCase().includes('gabi'))))\r\n\r\n    console.log(\"filtro: \", filtro)\r\n\r\n    setFilteredItems(newSearch);\r\n    console.log(filteredItems)\r\n    setSearch(e);\r\n    console.log(\"Itens filtrados: \", filteredItems)\r\n  };\r\n\r\n  const listItems = search === \"\"\r\n    ? categories\r\n    : filteredItems;\r\n\r\n  const isUserAuthenticated = () =>\r\n    localStorage.getItem(\"TOKEN\") === null && history.push(\"/\");\r\n\r\n  const getTokenFromStorage = (): string =>\r\n    localStorage.getItem(\"TOKEN\") as string;\r\n\r\n  async function handleDelete(id: number) {\r\n    try {\r\n      await api.delete(\"/item/\" + id, {\r\n        headers: {\r\n          authorization: getTokenFromStorage(),\r\n        },\r\n      });\r\n      GetCategory()\r\n      setRefresh((chave) => chave + 1);\r\n      console.log(id);\r\n    } catch (error) {\r\n      return alert(\"ocorreu algum erro\");\r\n    }\r\n\r\n    setShowDeleteModal({ id: id, name: showDeleteModal.name, isActive: false })\r\n  }\r\n\r\n  async function handleSubmit(event: ChangeEventHandler<HTMLInputElement>) {\r\n    if (name === \"\") {\r\n      return alert(\"Complete o campo corretamente!\");\r\n    } else {\r\n      setName('')\r\n      try {\r\n        await api.post(\r\n          \"category\",\r\n          { name },\r\n          {\r\n            headers: {\r\n              authorization: getTokenFromStorage(),\r\n            },\r\n          },\r\n\r\n        );\r\n\r\n        history.push(\"/cardapio\");\r\n\r\n        setRefresh((chave) => chave + 1);\r\n\r\n        setShowModal(false);\r\n      } catch (error) {\r\n        return alert(\"Erro ao tentar cadastrar Categoria\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function validate() {\r\n    if (nameItem === '' || description === '' || priceItem === '') {\r\n      return alert(\"Complete o campo corretamente!\");\r\n    } else {\r\n      setStep(step + 1)\r\n    }\r\n  }\r\n\r\n  function handleSubmitItem(event: any) {\r\n    const url = 'item'\r\n\r\n    var data = new FormData(event.target)\r\n    data.append('name', nameItem)\r\n    data.append('desc', description)\r\n    data.append('available', String(available))\r\n    data.append('category', categoryOptionsId.value)\r\n    data.append('imageurl', selectedFile)\r\n    data.append('price', priceItem)\r\n\r\n    console.log(\"body: \", data)\r\n\r\n    api.post(\r\n      url,\r\n      data,\r\n      {\r\n        headers: {\r\n          authorization: getTokenFromStorage(),\r\n        },\r\n      },\r\n\r\n    )\r\n      .then(response => {\r\n        console.log(response)\r\n        GetCategory()\r\n        history.push(\"/cardapio\");\r\n        setRefresh((chave) => chave + 1);\r\n        setShowModal(false);\r\n      })\r\n      .catch(error => {\r\n        setShowModal(false);\r\n        console.log(error.message)\r\n      })\r\n  }\r\n\r\n  async function goToCategory(category: ICategory) {\r\n    try {\r\n      const response = await api.get(`category/${category.id}`, {\r\n        headers: {\r\n          authorization: getTokenFromStorage(),\r\n        },\r\n      });\r\n\r\n      setResposta(resposta + 1)\r\n      setFilteredCategory(response.data)\r\n      console.log('filtered: ', filteredCategory)\r\n      console.log('resposta: ', response)\r\n      localStorage.setItem('CATEGORYID', response.data.id)\r\n      localStorage.setItem('CATEGORYNAME', response.data.name)\r\n\r\n      history.push('/cardapio/' + category.id)\r\n\r\n    } catch (error) {\r\n      return alert(\"ocorreu algum erro\");\r\n    }\r\n  }\r\n\r\n  function handleSelectedFiles(files: any) {\r\n    const file = files[0];\r\n\r\n    if (file.size > 10174706) {\r\n      alert('Erro, a imagem não pode ser maior que 10MB!')\r\n    } else {\r\n      setSelectedFile(file)\r\n    }\r\n  }\r\n\r\n  async function handleDeleteCategory(id: number) {\r\n    try {\r\n      await api.delete(\"category/\" + id, {\r\n        headers: {\r\n          authorization: getTokenFromStorage(),\r\n        },\r\n      });\r\n      setRefresh((chave) => chave + 1);\r\n      console.log(id);\r\n    } catch (error) {\r\n      return alert(\"ocorreu algum erro\");\r\n    }\r\n    setShowDeleteModal({ id: id, name: '', isActive: false });\r\n  }\r\n\r\n  async function handleEditCategory(category: ICategory) {\r\n    try {\r\n      await api.get(\"category/\" + category.id, {\r\n        headers: {\r\n          authorization: getTokenFromStorage(),\r\n        },\r\n      });\r\n    } catch (error) {\r\n      return alert(\"ocorreu algum erro\");\r\n    }\r\n    console.log(category.id);\r\n    console.log(category.name);\r\n    setName(category.name);\r\n    setShowModalEdit({ id: category.id, isActive: true, name: category.name });\r\n  }\r\n\r\n  async function handleEditItem(item: IItem) {\r\n    try {\r\n      await api.get(\"item/\" + item.id, {\r\n        headers: {\r\n          authorization: getTokenFromStorage(),\r\n        },\r\n      });\r\n    } catch (error) {\r\n      return alert(\"ocorreu algum erro\");\r\n    }\r\n    setNameItem(item.name)\r\n    setDescription(item.desc)\r\n    setPrice(String(item.price))\r\n    setCategoryOptionsId(item.category_id)\r\n    setShowModalEditItem({\r\n      id: item.id,\r\n      isActive: true,\r\n      name: item.name,\r\n      desc: item.desc,\r\n      imageurl: item.imageurl,\r\n      available: item.available,\r\n      category_id: item.category_id,\r\n      price: item.price\r\n    });\r\n  }\r\n\r\n  async function handleSubmitEditItem(\r\n    item: IItem,\r\n    id: number,\r\n    name: string,\r\n    desc: string,\r\n    available: string,\r\n    price: number,\r\n    piroca: string,\r\n  ) {\r\n    const body = {\r\n      name: nameItem,\r\n      desc: description,\r\n      available,\r\n      price: priceItem,\r\n      piroca: String(item.category_id)\r\n    }\r\n\r\n    if (name === '' ||\r\n      desc === ''\r\n    ) {\r\n      return alert('Complete os campos corretamente!')\r\n    } else {\r\n      try {\r\n        console.log('categoria 1 ', item.category_id)\r\n        console.log(\"categoria\", piroca)\r\n        console.log(\"corpo: \", body)\r\n        console.log(\"item id: \", id)\r\n        await api.put(\r\n          'item/' + id,\r\n          body,\r\n          {\r\n            headers: {\r\n              authorization: getTokenFromStorage(),\r\n            },\r\n          }\r\n        );\r\n        GetCategory()\r\n        history.push('/cardapio')\r\n        setRefresh((chave) => chave + 1);\r\n        setShowModalEditItem({\r\n          isActive: false,\r\n          name: item.name,\r\n          id: item.id,\r\n          desc: item.desc,\r\n          imageurl: item.imageurl,\r\n          category_id: item.category_id,\r\n          available: item.available,\r\n          price: item.price\r\n        })\r\n        window.location.reload()\r\n      } catch (error) {\r\n        return alert('Erro ao tentar editar Item' + error.message)\r\n      }\r\n    }\r\n  }\r\n\r\n  async function handleSubmitEdit(category: ICategory, id: number, name: string) {\r\n    if (name === \"\") {\r\n      return alert(\"Complete o campo corretamente!\");\r\n    } else {\r\n      try {\r\n        console.log('id: ', id);\r\n        await api.put(\r\n          \"category/\" + id,\r\n          { name },\r\n          {\r\n            headers: {\r\n              authorization: getTokenFromStorage(),\r\n            },\r\n          }\r\n        );\r\n\r\n        history.push(\"/cardapio\");\r\n\r\n        setRefresh((chave) => chave + 1);\r\n\r\n        setShowModalEdit({ id: category.id, isActive: false, name: category.name });\r\n      } catch (error) {\r\n        return alert(\"Erro ao tentar cadastrar Categoria\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function newCategoryButton() {\r\n    setName('');\r\n    setShowModal(true)\r\n  }\r\n\r\n  function closeModal() {\r\n    setShowModalCreate(false);\r\n    setStep(0);\r\n    setDescription(\"\");\r\n    setNameItem(\"\");\r\n    setPrice(\"\");\r\n  }\r\n\r\n  function GetCategory() {\r\n    setShowLoader(true);\r\n    try {\r\n      api\r\n        .get<ICategory[]>(\"/category\", {\r\n          headers: {\r\n            authorization: getTokenFromStorage(),\r\n          },\r\n        })\r\n        .then((response) => {\r\n          const categoryData = response.data.map(({ id, name }) => ({\r\n            label: name,\r\n            value: id,\r\n          }))\r\n          setCategoryOptions(categoryData)\r\n          console.log(\"opções: \", categoryOptions)\r\n          setShowLoader(false);\r\n          setCategories(response.data);\r\n          console.log(response.data);\r\n        });\r\n    } catch (error) {\r\n      return alert(\"ocorreu algum erro\");\r\n    }\r\n  }\r\n\r\n  function openCreateItemModal() {\r\n    setNameItem('')\r\n    setDescription('')\r\n    setPrice('')\r\n    setCategoryOptionsId('')\r\n\r\n    setShowModalCreate(true)\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    isUserAuthenticated();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    GetCategory();\r\n    setName(\"\");\r\n  }, [refresh]);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Grid>\r\n      <Aside />\r\n      <SubAside\r\n        title=\"Categorias\"\r\n        clicked={() => newCategoryButton()}\r\n        addButtonText=\"+ Adicionar nova categoria\"\r\n        items={categories}\r\n      >\r\n        {categories.map(category => (\r\n          <div key={category.id}>\r\n            <LiMenu onClick={() => goToCategory(category)}>\r\n              <TrashOutline\r\n                color=\"white\"\r\n                width=\"3rem\"\r\n                height=\"1.5rem\"\r\n                onClick={() => setShowDeleteModal({ id: category.id, name: category.name, isActive: true })}\r\n              />\r\n              <CreateOutline\r\n                color=\"white\"\r\n                width=\"3rem\"\r\n                height=\"1.5rem\"\r\n                onClick={() => handleEditCategory(category)}\r\n              />\r\n              {category.name}\r\n            </LiMenu>\r\n\r\n            {showDeleteModal.isActive && (\r\n              <DeleteModal\r\n                text={`Deseja excluir a categoria ${showDeleteModal.name}`}\r\n                clicked={() => handleDeleteCategory(showDeleteModal.id)}\r\n                closeClicked={() => setShowDeleteModal({ id: category.id, name: category.name, isActive: false })}\r\n              />\r\n            )}\r\n\r\n            {showModalEdit.isActive && (\r\n              <Modal\r\n                title={`Vamos editar a Categoria ${showModalEdit.name}`}\r\n                ButtonTitle=\"Adicionar\"\r\n                text=\"Por favor, preencha os campos abaixo, para prosseguirmos no processo de cadastro.\"\r\n                change={(event) => setName(event.target.value)}\r\n                closeClicked={() => setShowModalEdit({ id: category.id, isActive: false, name: category.name })}\r\n              >\r\n                <Input\r\n                  width=\"55%\"\r\n                  marginTop=\"20px\"\r\n                  placeholder=\"Digite o nome da categoria\"\r\n                  value={name}\r\n                  onChange={(event) => setName(event.target.value)}\r\n                />\r\n                <Button\r\n                  content=\"Editar Categoria\"\r\n                  width=\"25%\"\r\n                  height=\"2.25rem\"\r\n                  marginTop=\"28px\"\r\n                  clicked={() => handleSubmitEdit(category, showModalEdit.id, showModalEdit.name)}\r\n                />\r\n              </Modal>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </SubAside>\r\n      <Container height=\"100%\" padding=\"0px 0px 0px 0px\" flexDirection=\"column\" overflow=\"auto\">\r\n        <Header\r\n          title=\"Todos os seus pratos\"\r\n          subtitle={nomeCategoria === null ? \"Categoria: Geral\" : `Categoria: ` + nomeCategoria}\r\n          addButton=\"Adicionar novo prato\"\r\n          src={Food}\r\n          logo={Logo}\r\n          placeholder=\"Digite o nome de um item\"\r\n          clickedAdd={() => openCreateItemModal()}\r\n          onChange={(e) => {\r\n            onSearch(e.target.value);\r\n          }}\r\n        />\r\n        <Container display=\"inline-flex\" justifyContent=\"flex-start\" >\r\n          {filteredCategory === undefined\r\n            ?\r\n            categories.map((category) => (\r\n              category.items.map((item) => (\r\n                <>\r\n                  <Cards\r\n                    name={item.name}\r\n                    desc={item.desc}\r\n                    price={Intl.NumberFormat(\"pt-BR\", {\r\n                      style: \"currency\",\r\n                      currency: \"BRL\",\r\n                    }).format(item.price)}\r\n                    src={item.imageurl}\r\n                    TrashClicked={() => setShowDeleteModal({ id: item.id, name: item.name, isActive: true })}\r\n                    EditClicked={() => handleEditItem(item)}\r\n                    key={item.id}\r\n                  />\r\n\r\n                  {showDeleteModal.isActive && (\r\n                    <DeleteModal\r\n                      text={`Deseja excluir o item ${showDeleteModal.name}`}\r\n                      clicked={() => handleDelete(showDeleteModal.id)}\r\n                      closeClicked={() => setShowDeleteModal({ id: item.id, name: item.name, isActive: false })}\r\n                    />\r\n                  )}\r\n\r\n                  {showModalEditItem.isActive && (\r\n                    <Modal\r\n                      title={`Vamos Editar o item ${showModalEditItem.name}!`}\r\n                      ButtonTitle=\"Editar\"\r\n                      text={\r\n                        step === 0\r\n                          ? \"Por favor, preencha os campos abaixo, para prosseguirmos no processo de edição.\"\r\n                          : \"Adicione uma foto para o item\"\r\n                      }\r\n                      change={(event) => setName(event.target.value)}\r\n                      closeClicked={() => setShowModalEditItem({\r\n                        isActive: false,\r\n                        name: item.name,\r\n                        id: item.id,\r\n                        desc: item.desc,\r\n                        imageurl: item.imageurl,\r\n                        category_id: item.category_id,\r\n                        available: item.available,\r\n                        price: item.price\r\n                      })}\r\n                    >\r\n                      {step === 0 && (\r\n                        <>\r\n                          <Input\r\n                            width=\"55%\"\r\n                            marginTop=\"20px\"\r\n                            placeholder=\"Digite o nome do item\"\r\n                            value={nameItem}\r\n                            onChange={(event) => setNameItem(event.target.value)}\r\n                          />\r\n                          <Input\r\n                            width=\"55%\"\r\n                            marginTop=\"20px\"\r\n                            placeholder=\"Digite sobre o item\"\r\n                            value={description}\r\n                            onChange={(event) => setDescription(event.target.value)}\r\n                          />\r\n                          <Input\r\n                            width=\"55%\"\r\n                            placeholder=\"Digite o preço do item\"\r\n                            value={priceItem}\r\n                            onChange={(event) => setPrice(event.target.value)}\r\n                            margin=\"20px 0 20px 0\"\r\n                          />\r\n                          <Button\r\n                            content=\"Editar\"\r\n                            width=\"25%\"\r\n                            height=\"2.25rem\"\r\n                            marginTop=\"28px\"\r\n                            isNotForm\r\n                            clicked={() => handleSubmitEditItem(\r\n                              item,\r\n                              showModalEditItem.id,\r\n                              showModalEditItem.name,\r\n                              showModalEditItem.desc,\r\n                              showModalEditItem.available,\r\n                              showModalEditItem.price,\r\n                              showModalEditItem.category_id\r\n                            )}\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </Modal>\r\n                  )}\r\n                </>\r\n              ))\r\n            ))\r\n            :\r\n            filteredCategory?.items.map((item) => (\r\n              <>\r\n                <Cards\r\n                  name={item.name}\r\n                  desc={item.desc}\r\n                  price={Intl.NumberFormat(\"pt-BR\", {\r\n                    style: \"currency\",\r\n                    currency: \"BRL\",\r\n                  }).format(item.price)}\r\n                  src={item.imageurl}\r\n                  EditClicked={() => handleEditItem(item)}\r\n                  TrashClicked={() => setShowDeleteModal({ id: item.id, name: item.name, isActive: true })}\r\n                  key={item.id}\r\n                />\r\n\r\n                {showDeleteModal.isActive && (\r\n                  <DeleteModal\r\n                    text={`Deseja excluir o item ${showDeleteModal.name}`}\r\n                    clicked={() => handleDelete(showDeleteModal.id)}\r\n                    closeClicked={() => setShowDeleteModal({ id: item.id, name: item.name, isActive: false })}\r\n                  />\r\n                )}\r\n\r\n                {showModalEditItem.isActive && (\r\n                  <Modal\r\n                    title={`Vamos Editar o item ${showModalEditItem.name}!`}\r\n                    ButtonTitle=\"Editar\"\r\n                    text={\r\n                      step === 0\r\n                        ? \"Por favor, preencha os campos abaixo, para prosseguirmos no processo de edição.\"\r\n                        : \"Adicione uma foto para o item\"\r\n                    }\r\n                    change={(event) => setName(event.target.value)}\r\n                    closeClicked={() => setShowModalEditItem({\r\n                      isActive: false,\r\n                      name: item.name,\r\n                      id: item.id,\r\n                      desc: item.desc,\r\n                      imageurl: item.imageurl,\r\n                      category_id: item.category_id,\r\n                      available: item.available,\r\n                      price: item.price\r\n                    })}\r\n                  >\r\n                    {step === 0 && (\r\n                      <>\r\n                        <Input\r\n                          width=\"55%\"\r\n                          marginTop=\"20px\"\r\n                          placeholder=\"Digite o nome do item\"\r\n                          value={nameItem}\r\n                          onChange={(event) => setNameItem(event.target.value)}\r\n                        />\r\n                        <Input\r\n                          width=\"55%\"\r\n                          marginTop=\"20px\"\r\n                          placeholder=\"Digite sobre o item\"\r\n                          value={description}\r\n                          onChange={(event) => setDescription(event.target.value)}\r\n                        />\r\n                        <Input\r\n                          width=\"55%\"\r\n                          placeholder=\"Digite o preço do item\"\r\n                          value={priceItem}\r\n                          onChange={(event) => setPrice(event.target.value)}\r\n                          margin=\"20px 0 20px 0\"\r\n                        />\r\n                        <Button\r\n                          content=\"Editar\"\r\n                          width=\"25%\"\r\n                          height=\"2.25rem\"\r\n                          marginTop=\"28px\"\r\n                          isNotForm\r\n                          clicked={() => handleSubmitEditItem(\r\n                            item,\r\n                            showModalEditItem.id,\r\n                            showModalEditItem.name,\r\n                            showModalEditItem.desc,\r\n                            showModalEditItem.available,\r\n                            showModalEditItem.price,\r\n                            showModalEditItem.category_id\r\n                          )}\r\n                        />\r\n                      </>\r\n                    )}\r\n                  </Modal>\r\n                )}\r\n\r\n\r\n              </>\r\n            ))\r\n          }\r\n        </Container>\r\n      </Container>\r\n      {showModal && (\r\n        <Modal\r\n          title=\"Vamos adicionar uma nova categoria!\"\r\n          ButtonTitle=\"Adicionar\"\r\n          text=\"Por favor, preencha os campos abaixo, para prosseguirmos no processo de cadastro.\"\r\n          change={(event) => setName(event.target.value)}\r\n          closeClicked={() => setShowModal(false)}\r\n        >\r\n          <Input\r\n            width=\"55%\"\r\n            marginTop=\"20px\"\r\n            placeholder=\"Digite o nome da categoria\"\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n          <Button\r\n            content=\"Adicionar Categoria\"\r\n            width=\"25%\"\r\n            height=\"2.25rem\"\r\n            marginTop=\"28px\"\r\n            clicked={handleSubmit}\r\n          />\r\n        </Modal>\r\n      )}\r\n\r\n      {showLoader && <Loader />}\r\n\r\n      {showModalCreate && (\r\n        <Modal\r\n          title=\"Vamos adicionar um novo item!\"\r\n          ButtonTitle=\"Adicionar\"\r\n          text={\r\n            step === 0\r\n              ? \"Por favor, preencha os campos abaixo, para prosseguirmos no processo de cadastro.\"\r\n              : \"Adicione uma foto para o item\"\r\n          }\r\n          change={(event) => setName(event.target.value)}\r\n          closeClicked={closeModal}\r\n        >\r\n          <form onSubmit={handleSubmitItem}>\r\n            {step === 0 && (\r\n              <>\r\n                <Input\r\n                  width=\"55%\"\r\n                  marginTop=\"20px\"\r\n                  placeholder=\"Digite o nome do item\"\r\n                  value={nameItem}\r\n                  onChange={(event) => setNameItem(event.target.value)}\r\n                />\r\n                <Input\r\n                  width=\"55%\"\r\n                  marginTop=\"20px\"\r\n                  placeholder=\"Digite sobre o item\"\r\n                  value={description}\r\n                  onChange={(event) => setDescription(event.target.value)}\r\n                />\r\n                <Input\r\n                  width=\"55%\"\r\n                  placeholder=\"Digite o preço do item\"\r\n                  value={priceItem}\r\n                  onChange={(event) => setPrice(event.target.value)}\r\n                  margin=\"20px 0 20px 0\"\r\n                />\r\n                <Select\r\n                  onChange={(option: { label: string; value: number }) =>\r\n                    setCategoryOptionsId({\r\n                      label: option.label,\r\n                      value: option.value,\r\n                    })\r\n                  }\r\n                  value={categoryOptionsId}\r\n                  placeholder=\"Selecione uma categoria\"\r\n                  noOptionsMessage={() => 'Nenhuma categoria encontrado'}\r\n                  options={categoryOptions}\r\n                  styles={customStyles}\r\n                  style={{ color: \"white\", fontSize: \"24px\" }}\r\n                />\r\n                <Button\r\n                  content=\"Avançar\"\r\n                  width=\"25%\"\r\n                  height=\"2.25rem\"\r\n                  marginTop=\"28px\"\r\n                  isNotForm\r\n                  clicked={() => validate()}\r\n                />\r\n              </>\r\n            )}\r\n            {step === 1 && (\r\n              <>\r\n                <Dropzone onDrop={handleSelectedFiles} accept={\"image/*\"}>\r\n                  {({ getRootProps, getInputProps }) => (\r\n                    <div {...getRootProps()}>\r\n                      <DragFileArea\r\n                        margin=\"24px 0 0 0\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                      >\r\n                        <Add color=\"#7A7A7A\" width=\"36px\" height=\"36px\" />\r\n                        <input {...getInputProps()} />\r\n                      </DragFileArea>\r\n                    </div>\r\n                  )}\r\n                </Dropzone>\r\n\r\n                <Button\r\n                  content=\"Adicionar Item\"\r\n                  width=\"25%\"\r\n                  height=\"2.25rem\"\r\n                  marginTop=\"28px\"\r\n                />\r\n              </>\r\n            )}\r\n          </form>\r\n        </Modal>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Cardapio;\r\n\r\n\r\n\r\n","D:\\Estudo\\TCC\\Cardappio\\web\\src\\routes.tsx",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Login\\Login.tsx",["211","212","213"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport api from '../../services/api';\r\n\r\nimport { colors } from '../../utils/colors';\r\nimport { fontsSizes } from '../../utils/fontSizes';\r\nimport { Title, SubTitle, P } from 'components/Text/text';\r\nimport { Body, ContainerLeft, ContainerRight, BtnDiv, Linha } from './styles';\r\nimport { dimensions } from 'utils';\r\nimport { Input } from 'components/Input/Input';\r\nimport Button from 'components/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Loader from 'components/Loader'\r\n\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [pass, setPass] = useState('');\r\n  const [showLoader, setShowLoader] = useState(false)\r\n  const history = useHistory()\r\n\r\n\r\n  const pipe = (...fns: Function[]) => (params: unknown) =>\r\n    fns.reduce((fn, pipeF) => pipeF(fn), params)\r\n\r\n  const validateFields = () =>\r\n    email !== '' && pass !== ''\r\n\r\n  const showError = () =>\r\n    alert('complete os campos corretamente')\r\n\r\n  const authLoginService = async () =>\r\n    await api.post('login', { email, pass })\r\n\r\n  const storeUserToken = ({ data }: { data: any }) =>\r\n    localStorage.setItem('TOKEN', data.authorization)\r\n\r\n  const storeUserInfo = () =>\r\n    localStorage.setItem('EMAIL', email)\r\n\r\n  const redirectUserToDashboard = () =>\r\n    history.push('/cardapio')\r\n\r\n  const handlerErrorApi = () =>\r\n    alert('Houve um erro na API')\r\n\r\n  const submitLogin = () =>\r\n    validateFields() ?\r\n      authLoginService()\r\n        .then(\r\n          pipe(\r\n            storeUserToken,\r\n            storeUserInfo,\r\n            redirectUserToDashboard,\r\n          )\r\n        )\r\n        .catch(handlerErrorApi)\r\n      : showError()\r\n\r\n  return (\r\n    <Body>\r\n      <ContainerLeft>\r\n        <Title\r\n          fontFamily=\"Quicksand\"\r\n          color={colors.menuOrange}\r\n          fontSize={fontsSizes.large30}\r\n          marginTop={dimensions.spacing56}\r\n        >\r\n          Cardappio\r\n                </Title>\r\n        <SubTitle\r\n          color={colors.green}\r\n          fontSize={fontsSizes.large18}\r\n          fontWeight=\"400\"\r\n        >\r\n          Seja Bem-vindo!\r\n                </SubTitle>\r\n        <P\r\n          color={colors.white}\r\n          fontSize={fontsSizes.small14}\r\n          marginTop={dimensions.spacing16}\r\n        >\r\n          Por favor faça o seu login para ter acesso!\r\n                </P>\r\n        <Input\r\n          placeholder=\"Digite seu email\"\r\n          marginTop=\"36px\"\r\n          marginTopResponsive=\"64px\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={event => setEmail(event.target.value)}\r\n        />\r\n        <Input\r\n          placeholder=\"Digite a sua senha\"\r\n          marginTop=\"12px\"\r\n          marginTopResponsive=\"24px\"\r\n          type=\"password\"\r\n          value={pass}\r\n          onChange={event => setPass(event.target.value)}\r\n        />\r\n        <BtnDiv>\r\n          <Button\r\n            content=\"Entrar\"\r\n            width=\"50%\"\r\n            marginTop=\"1rem\"\r\n            clicked={submitLogin}\r\n          />\r\n          <Link style={{ textDecoration: \"none\" }} to=\"/\">\r\n            <P\r\n              color={colors.menuOrange}\r\n              fontSize={fontsSizes.small12}\r\n              fontSizeResponsive={fontsSizes.medium16}\r\n              fontWeight=\"500\"\r\n              marginTop=\"1.425rem\"\r\n            >\r\n              Esqueceu a senha?\r\n                    </P>\r\n          </Link>\r\n        </BtnDiv>\r\n        <Linha></Linha>\r\n        <P\r\n          color={colors.white}\r\n          marginTop=\"32px\"\r\n          textAlign=\"center\"\r\n        >\r\n          Ainda não tem a sua conta?\r\n                </P>\r\n        <Link style={{ textDecoration: \"none\" }} to=\"/cadastro\">\r\n          <P\r\n            color={colors.menuOrange}\r\n            fontSize={fontsSizes.small14}\r\n            fontWeight=\"500\"\r\n            marginTop=\"1.425rem\"\r\n            textAlign=\"center\"\r\n          >\r\n            Crie agora mesmo!\r\n                    </P>\r\n        </Link>\r\n      </ContainerLeft>\r\n      <ContainerRight></ContainerRight>\r\n    </Body>\r\n  );\r\n}\r\n\r\nexport default Login;",["214","215"],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Mesas\\Mesas.tsx",["216","217"],"import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Aside from \"../../components/Aside/Aside\";\r\nimport SubAside from \"../../components/SubAside/SubAside\";\r\nimport Container from \"../../components/Container/Container\";\r\nimport { Grid } from \"../../components/Grid/style\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport { Title } from \"../../components/Text/text\";\r\nimport Loader from \"components/Loader\";\r\nimport DeleteModal from \"../../components/DeleteModal/index\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport { Input } from \"components/Input/Input\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nimport { TableWithTabs, Body } from \"./style\";\r\nimport { TrashOutline, CreateOutline } from \"react-ionicons\";\r\n// import { QRCode } from 'react-qrcode-logo';\r\nimport QRCode from \"qrcode.react\";\r\n\r\nimport { LiMenu } from \"../../components/SubAside/style\";\r\n\r\ninterface ITable {\r\n  table_id: number;\r\n  table_qrcode: string;\r\n  table_number: number;\r\n  restaurant_id: string;\r\n}\r\n\r\ninterface IEditTable {\r\n  table_id: number;\r\n  table_number: number;\r\n  isActive: boolean;\r\n}\r\n\r\ninterface IDeleteTable {\r\n  table_number: number;\r\n  table_id: number;\r\n  isActive: boolean;\r\n}\r\n\r\ninterface ITableNumber {\r\n  table_number: number\r\n}\r\n\r\nconst Mesas = () => {\r\n  const history = useHistory();\r\n\r\n  const [showDeleteModal, setShowDeleteModal] = useState<IDeleteTable>({\r\n    table_id: 0,\r\n    table_number: 0,\r\n    isActive: false,\r\n  });\r\n  const [showModalCreate, setShowModalCreate] = useState(false);\r\n  const [showModalEdit, setShowModalEdit] = useState<IEditTable>({\r\n    table_id: 0,\r\n    table_number: 0,\r\n    isActive: false,\r\n  });\r\n\r\n  const [mesas, setMesas] = useState<ITable[]>([]);\r\n  const [filteredMesas, setFilteredMesas] = useState<ITable>();\r\n  const [showLoader, setShowLoader] = useState(false);\r\n\r\n  // const [showModalEdit, setShowModalEdit] = useState<IShowModal>({ id: 0, isActive: false, name: '' });\r\n\r\n  const [table_number, setNumberMesa] = useState('');\r\n\r\n  const getTokenFromStorage = (): string =>\r\n    localStorage.getItem(\"TOKEN\") as string;\r\n\r\n  function GetTables() {\r\n    setShowLoader(true);\r\n    try {\r\n      api\r\n        .get(\"/table\", {\r\n          headers: {\r\n            authorization: getTokenFromStorage(),\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setMesas(response.data.content);\r\n          setShowLoader(false);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"DEU RUIM IRMÃOZINHO\");\r\n    }\r\n  }\r\n\r\n  function GoToTable({ table_id }: ITable) {\r\n    setShowLoader(true);\r\n    try {\r\n      api\r\n        .get(`/table/${table_id}`, {\r\n          headers: {\r\n            authorization: getTokenFromStorage(),\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setFilteredMesas(response.data.content);\r\n          console.log(\"mesas filtradas: \", filteredMesas);\r\n          setShowLoader(false);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"DEU: RUIM\");\r\n    }\r\n  }\r\n\r\n  async function handleDelete(id: number) {\r\n    try {\r\n      await api.delete(\"/table/\" + id, {\r\n        headers: {\r\n          authorization: getTokenFromStorage(),\r\n        },\r\n      });\r\n      GetTables();\r\n      console.log(id);\r\n    } catch (error) {\r\n      return alert(\"ocorreu algum erro\");\r\n    }\r\n\r\n    setShowDeleteModal({\r\n      table_id: id,\r\n      table_number: showDeleteModal.table_number,\r\n      isActive: false,\r\n    });\r\n  }\r\n\r\n  async function handleEditMesa(mesa: ITable) {\r\n    try {\r\n      await api.get(\"table/\" + mesa.table_id, {\r\n        headers: {\r\n          authorization: getTokenFromStorage(),\r\n        },\r\n      });\r\n    } catch (error) {\r\n      return alert(\"ocorreu algum erro\");\r\n    }\r\n    console.log(mesa.table_id);\r\n    console.log(mesa.table_number);\r\n    setNumberMesa(String(mesa.table_number));\r\n    setShowModalEdit({ table_id: mesa.table_id, table_number: mesa.table_number, isActive: true });\r\n  }\r\n\r\n  function newTableButton() {\r\n    setNumberMesa('');\r\n    setShowModalCreate(true);\r\n  }\r\n\r\n  async function handleSubmit(event: React.ChangeEvent<HTMLInputElement>) {\r\n    if (table_number === null) {\r\n      return alert(\"Complete o campo corretamente!\");\r\n    } else {\r\n      setNumberMesa('');\r\n      try {\r\n        await api.post(\r\n          \"table\",\r\n          { table_number },\r\n          {\r\n            headers: {\r\n              authorization: getTokenFromStorage(),\r\n            },\r\n          }\r\n        );\r\n\r\n        GetTables()\r\n        history.push(\"/mesas\");\r\n\r\n        setShowModalCreate(false);\r\n      } catch (error) {\r\n        return alert(\"Erro ao tentar cadastrar Mesa\");\r\n      }\r\n    }\r\n  }\r\n\r\n  async function handleSubmitEditMesa(mesa: ITable, id: number, tableNumber: number) {\r\n    if (table_number === null) {\r\n      return alert(\"Complete o campo corretamente!\");\r\n    } else {\r\n      try {\r\n        console.log('id: ', id);\r\n        await api.put(\r\n          \"table/\" + id,\r\n          { table_number },\r\n          {\r\n            headers: {\r\n              authorization: getTokenFromStorage(),\r\n            },\r\n          }\r\n        );\r\n\r\n        GetTables()\r\n        history.push(\"/mesas\");\r\n\r\n        setShowModalEdit({ table_id: mesa.table_id, isActive: false, table_number: mesa.table_number });\r\n      } catch (error) {\r\n        return alert(\"Erro ao tentar editar mesa\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function teste(){\r\n    window.print()\r\n  }\r\n\r\n  useEffect(() => {\r\n    GetTables();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid>\r\n      <Aside />\r\n      <SubAside\r\n        title=\"Mesas\"\r\n        clicked={() => newTableButton()}\r\n        addButtonText=\"+ Adicionar nova mesa\"\r\n      // items={mesas}\r\n      >\r\n        {mesas.map((mesa) => (\r\n          <div key={mesa.table_id}>\r\n            <LiMenu onClick={() => GoToTable(mesa)}>\r\n              <TrashOutline\r\n                color=\"white\"\r\n                width=\"3rem\"\r\n                height=\"1.5rem\"\r\n                onClick={() =>\r\n                  setShowDeleteModal({\r\n                    table_id: mesa.table_id,\r\n                    table_number: mesa.table_number,\r\n                    isActive: true,\r\n                  })\r\n                }\r\n              />\r\n              <CreateOutline\r\n                color=\"white\"\r\n                width=\"3rem\"\r\n                height=\"1.5rem\"\r\n                onClick={() => handleEditMesa(mesa)}\r\n              />\r\n              Mesa {mesa.table_number}\r\n            </LiMenu>\r\n\r\n            {showModalEdit.isActive && (\r\n              <Modal\r\n                title={`Vamos editar a Mesa: ${showModalEdit.table_number}`}\r\n                ButtonTitle=\"Alterar\"\r\n                text=\"Por favor, preencha o novo número da mesa.\"\r\n                closeClicked={() => setShowModalEdit({\r\n                  table_id: 0,\r\n                  table_number: 0,\r\n                  isActive: false,\r\n                })}\r\n              >\r\n                <Input\r\n                  width=\"55%\"\r\n                  type=\"number\"\r\n                  marginTop=\"20px\"\r\n                  placeholder=\"Digite o novo número da mesa\"\r\n                  value={table_number}\r\n                  onChange={(event) => setNumberMesa(event.target.value)}\r\n                />\r\n                <Button\r\n                  content=\"Alterar Mesa\"\r\n                  width=\"25%\"\r\n                  height=\"2.25rem\"\r\n                  marginTop=\"28px\"\r\n                  clicked={() => handleSubmitEditMesa(mesa, showModalEdit.table_id, showModalEdit.table_number)}\r\n                />\r\n              </Modal>\r\n            )}\r\n\r\n            {showDeleteModal.isActive && (\r\n              <DeleteModal\r\n                text={`Deseja excluir a Mesa: ${showDeleteModal.table_number}`}\r\n                clicked={() => handleDelete(showDeleteModal.table_id)}\r\n                closeClicked={() =>\r\n                  setShowDeleteModal({\r\n                    table_id: mesa.table_id,\r\n                    table_number: mesa.table_number,\r\n                    isActive: false,\r\n                  })\r\n                }\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </SubAside>\r\n      <Container\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        padding=\"110px 6px 0px 55px\"\r\n        height=\"100vh\"\r\n      >\r\n        <Body>\r\n          <TableWithTabs>\r\n            {filteredMesas === undefined ? (\r\n              <Title color=\"#B2DA5A\" marginBottom=\"64px\">\r\n                Clique na mesa para obter o QR Code!\r\n              </Title>\r\n            ) : (\r\n              <>\r\n                <Title color=\"#B2DA5A\" marginBottom=\"64px\">\r\n                  Mesa: {filteredMesas.table_number}\r\n                </Title>\r\n                <QRCode\r\n                  value={filteredMesas.table_qrcode}\r\n                  size={250}\r\n                  renderAs=\"svg\"\r\n                  includeMargin={true}\r\n                />\r\n                <Button content=\"Imprimir\" marginTop=\"48px\" width=\"20%\" clicked={() => teste()}/>\r\n\r\n              </>\r\n            )}\r\n          </TableWithTabs>\r\n        </Body>\r\n      </Container>\r\n\r\n      {showLoader && <Loader />}\r\n\r\n      {showModalCreate && (\r\n        <Modal\r\n          title=\"Vamos adicionar uma nova mesa!\"\r\n          ButtonTitle=\"Adicionar\"\r\n          text=\"Por favor, preencha o campo abaixo, para prosseguirmos no processo de cadastro.\"\r\n          closeClicked={() => setShowModalCreate(false)}\r\n        >\r\n          <Input\r\n            width=\"55%\"\r\n            type=\"number\"\r\n            marginTop=\"20px\"\r\n            placeholder=\"Digite o nome da categoria\"\r\n            value={table_number}\r\n            onChange={(event) => setNumberMesa(event.target.value)}\r\n          />\r\n          <Button\r\n            content=\"Adicionar Categoria\"\r\n            width=\"25%\"\r\n            height=\"2.25rem\"\r\n            marginTop=\"28px\"\r\n            clicked={handleSubmit}\r\n          />\r\n        </Modal>\r\n      )}\r\n\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Mesas;\r\n",["218","219"],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Mesas\\style.ts",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\App.tsx",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Comandas\\style.ts",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Cardapio\\style.ts",[],["220","221"],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\services\\api.ts",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Grid\\style.ts",[],["222","223"],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Linha\\style.ts",[],["224","225"],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Text\\text.ts",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\SubAside\\SubAside.tsx",["226","227"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport { DivContainer, DivTitle, Title, SubTitle, SubMenu, TitleSubMenu, UlMenu,  AddButton } from './style'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\ninterface ISubAside {\r\n  children?: React.ReactNode\r\n  clicked?: any\r\n  title: string\r\n  width?: string\r\n  height?: string\r\n  marginTop?: string\r\n  color?: string\r\n\r\n  addButtonText?: string\r\n  items?:IItems[]\r\n  \r\n}\r\n\r\n\r\ninterface IItems {\r\n  id: number\r\n  name?: string\r\n}\r\n\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction SubAside(props: ISubAside) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const tamanho = props.items?.length;\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n \r\n  return (\r\n    <DivContainer>\r\n      <DivTitle>\r\n        <Title>{props.title}</Title>\r\n        <SubTitle> {tamanho} {props.title} achadas</SubTitle>\r\n      </DivTitle>\r\n      <SubMenu>\r\n        <TitleSubMenu>{props.title}</TitleSubMenu>\r\n        <UlMenu>\r\n          {props.children}\r\n        </UlMenu>\r\n        <AddButton\r\n          onClick={props.clicked}\r\n          width={props.width}\r\n          height={props.height}\r\n          marginTop={props.marginTop}\r\n          color={props.color}\r\n        >\r\n          {props.addButtonText}\r\n        </AddButton>\r\n      </SubMenu>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Item deletado com sucesso!\r\n                </Alert>\r\n      </Snackbar>\r\n    </DivContainer>\r\n\r\n  );\r\n}\r\n\r\nexport default SubAside;\r\n\r\n\r\n",["228","229"],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Container\\Container.tsx",[],["230","231"],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Button\\Button.tsx",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\utils\\fontSizes.ts",[],["232","233"],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\CardsCommand\\index.tsx",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Cards\\Cards.tsx",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Login\\styles.ts",["234"],"import styled from 'styled-components';\n\nimport Fundo from '../../Images/VectorBackground.png';\n\nimport { colors }from '../../utils/colors';\nimport { dimensions }from '../../utils/dimensions';\n\ninterface IContainrLeft {\n    overflow?: string\n}\n\nconst Body = styled.div`\n    width: 100%;\n    height: 100vh;\n    display: inline-flex;\n`\n\nconst ContainerLeft = styled.div<IContainrLeft>`\n    width: 33%;\n    min-width: 400px;\n    height: 100vh;\n    background-color: ${colors.black};\n    padding: 64px;\n    overflow-y: ${props => props.overflow};\n    ::-webkit-scrollbar {\n    width: 0px;\n}\n`\n\nconst ContainerRight = styled.div`\n    width: 67%;\n    height: 100vh;\n    background-color: ${colors.lightBlack};\n    background-image: url(${Fundo});\n    @media screen and (min-width: 1281px){\n        background-repeat: no-repeat;\n        background-size: cover;\n    }\n`\n\nconst BtnDiv = styled.div`\n    width: 100%;\n    min-height: 50px;\n    height: 13%;\n    display: inline-flex;\n    justify-content: space-between;\n    @media screen and (min-width: 1480px){\n        height: 10%;\n    }\n`\n\nconst Linha = styled.hr`\n    width: 100%;\n    border: 1px solid ${colors.textBlack};\n    margin-top: 5%;\n`\n\nexport { Body, ContainerLeft, ContainerRight, BtnDiv, Linha }","D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Comandas\\Comandas.tsx",["235","236"],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Pedidos\\Pedidos.tsx",["237","238"],"import { useEffect, useState } from 'react';\r\nimport api from \"../../services/api\";\r\n\r\nimport Aside from '../../components/Aside/Aside'\r\nimport SubAside from '../../components/SubAside/SubAside'\r\nimport Container from '../../components/Container/Container'\r\nimport { Grid } from '../../components/Grid/style'\r\nimport CardsOrder from '../../components/CardsOrder/index'\r\nimport { TableWithTabs, Body, CardsContainer } from './style'\r\n\r\nimport FundoMenor from '../../Images/FundoMenor.png'\r\n\r\ninterface IOrder {\r\n  item_command_id: number\r\n  item_name: string\r\n  item_desc: string\r\n  item_command_status: number\r\n  table_number: number\r\n}\r\n\r\nfunction Pedidos() {\r\n\r\n  const [showLoader, setShowLoader] = useState(false)\r\n  \r\n  const [orders, setOrders] = useState<IOrder[]>([])\r\n  \r\n\r\n\r\n  const getTokenFromStorage = (): string =>\r\n  localStorage.getItem(\"TOKEN\") as string;\r\n\r\n\r\n  async function getOrders() {\r\n    setShowLoader(true);\r\n    try {\r\n      await api\r\n        .get(\"/kitchenorder\", {\r\n          headers: {\r\n            authorization: getTokenFromStorage(),\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setOrders(response.data.content)\r\n        });\r\n    } catch (error) {\r\n      return alert(\"ocorreu algum erro\");\r\n    }\r\n  }\r\n\r\n  async function updateItemStatus(id: any, status: number) {\r\n    try {\r\n      await api\r\n        .put(`/admupdateorder/${id}`, { status: status }, {\r\n          headers: {\r\n            authorization: getTokenFromStorage(),\r\n          },\r\n        })\r\n        .then((response) => {\r\n          console.log(response)\r\n          getOrders()\r\n        })\r\n    }\r\n    catch (error) {\r\n      return alert(error.message)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getOrders()\r\n  }, [])\r\n\r\n  return (\r\n    <Grid>\r\n      <Aside />\r\n      <SubAside\r\n        title=\"Gerenciamento de Pedidos\"\r\n      >\r\n\r\n      </SubAside>\r\n      <Container display=\"flex\" justifyContent=\"flex-end\" padding=\"110px 6px 0px 55px\" height=\"100vh\">\r\n        <Body>\r\n          <TableWithTabs>\r\n            <CardsContainer>\r\n              <Container\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"flex-start\"\r\n                margin=\"36px\"\r\n                backgroundColor=\"transparent\"\r\n                padding=\"0px\"\r\n                alignitems=\"center\"\r\n                gap=\"30px\"\r\n              >\r\n                {orders.map(order => (\r\n                  <CardsOrder\r\n                    key={order.item_command_id}\r\n                    name={order.item_name}\r\n                    desc={order.item_desc}\r\n                    src={FundoMenor}\r\n                    TableNumber={order.table_number}\r\n                    cancelClicked={() => updateItemStatus(order.item_command_id, 4)}\r\n                    readyClicked={() => updateItemStatus(order.item_command_id, 3)}\r\n                    preparationClicked={() => updateItemStatus(order.item_command_id, 2)}\r\n                  />\r\n                ))}\r\n              </Container>\r\n            </CardsContainer>\r\n          </TableWithTabs>\r\n        </Body>\r\n      </Container>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Pedidos;\r\n\r\n","D:\\Estudo\\TCC\\Cardappio\\web\\src\\index.tsx",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\utils\\colors.ts",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Pedidos\\style.ts",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\CardsOrder\\style.ts",["239"],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\CardsOrder\\index.tsx",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\SubAside\\style.ts",["240","241"],"import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components'\r\n\r\nimport { colors } from '../../utils/colors'\r\nimport { dimensions } from '../../utils/dimensions'\r\nimport { fontsSizes } from '../../utils/fontSizes'\r\n\r\ninterface DivMenuContainerProps{\r\n    height?: string\r\n}\r\n\r\ninterface DivTitleProps{\r\n\r\n}\r\n\r\ninterface TitleProps{\r\n    marginLeft?: string\r\n    paddingTop?: string\r\n}\r\n\r\ninterface SubTitleProps{\r\n    marginLeft?: string\r\n    paddingTop?: string\r\n    marginBottom?: string\r\n}\r\n\r\ninterface SubMenuProps{\r\n\r\n}\r\n\r\ninterface TitleSubMenuProps{\r\n    marginLeft?: string\r\n    paddingTop?: string\r\n}\r\n\r\ninterface UlMenuProps{\r\n\r\n}\r\n\r\ninterface LiMenuProps{\r\n\r\n}\r\n\r\ninterface AddButtonProps{\r\n    height?: string\r\n    width?: string\r\n    marginTop?: string\r\n    color?: string\r\n}\r\n\r\ninterface LinkProps{\r\n    \r\n}\r\n\r\nconst DivContainer = styled.div<DivMenuContainerProps>`\r\n    height: ${props => props.height || dimensions.heightFullWindow};\r\n    background-color: ${colors.lightBlack};\r\n    width: 100%;\r\n    min-width: 300px;\r\n`\r\n\r\nconst DivTitle = styled.div<DivTitleProps>`\r\n    height: 26%;\r\n    width: ${dimensions.widthFull};\r\n    background-color: ${colors.menuOrange};\r\n    @media(min-width: 1440px) {\r\n        height: 19.9%\r\n    }\r\n`\r\n\r\nconst Title = styled.h1<TitleProps>`\r\n    font-size: ${fontsSizes.large24};\r\n    font-weight: 500;\r\n    color: ${colors.white};\r\n    margin-left: ${props => props.marginLeft || dimensions.spacing40};\r\n    padding-top: ${props => props.paddingTop || dimensions.spacing72};\r\n    @media(min-width: 1280px) {\r\n        font-size: ${fontsSizes.large28};\r\n        padding-top: ${props => props.paddingTop || dimensions.spacing60};\r\n    }\r\n    @media(min-width: 1440px) {\r\n        font-size: ${fontsSizes.large30};\r\n        padding-top: ${props => props.paddingTop || dimensions.spacing60};\r\n    }\r\n`\r\n\r\nconst SubTitle = styled.p<SubTitleProps>`\r\n    font-size: ${fontsSizes.small14};\r\n    font-weight: light;\r\n    color: ${colors.white};\r\n    margin-left: ${props => props.marginLeft || dimensions.spacing40};\r\n    margin-bottom: ${props => props.marginBottom || dimensions.spacing40};\r\n    @media(min-width: 1280px) {\r\n        font-size: ${fontsSizes.large18};\r\n    }\r\n    @media(min-width: 1440px) {\r\n        font-size: ${fontsSizes.large20};\r\n    }\r\n`\r\n\r\nconst SubMenu = styled.div<SubMenuProps>`\r\n    width: ${dimensions.widthFull};\r\n    height: 76%;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        width: 0px;\r\n    }\r\n    @media(min-width: 1280px) {\r\n        height: 80.7%\r\n    }\r\n    @media(min-width: 1440px) {\r\n        height: 80.7%\r\n    }\r\n\r\n`\r\n\r\nconst TitleSubMenu = styled.h2<TitleSubMenuProps>`\r\n    font-size: ${fontsSizes.large18};\r\n    color: ${colors.white};\r\n    font-weight: 500;\r\n    margin-left: ${props => props.marginLeft || dimensions.spacing40};\r\n    padding-top: ${props => props.paddingTop || dimensions.spacing64};\r\n    @media(min-width: 1280px) {\r\n        font-size: ${fontsSizes.large20};\r\n    }\r\n    @media(min-width: 1440px) {\r\n        font-size: ${fontsSizes.large24};\r\n    }\r\n`\r\n\r\nconst UlMenu = styled.ul<UlMenuProps>`\r\n    list-style: none;\r\n    margin-top: ${dimensions.spacing24};\r\n    @media(min-width: 1280px) {\r\n        margin-top: ${dimensions.spacing32};\r\n    }\r\n    @media(min-width: 1440px) {\r\n        margin-top: ${dimensions.spacing40};\r\n    }\r\n`\r\n\r\nconst LiMenu = styled.li<LiMenuProps>`\r\n    font-size: ${fontsSizes.small14};\r\n    color: ${colors.green};\r\n    padding-left: ${dimensions.spacing40};\r\n    margin-bottom: ${dimensions.spacing24};\r\n    cursor: pointer;\r\n    display: flex;\r\n    @media(min-width: 1280px) {\r\n        font-size: ${fontsSizes.large18};\r\n    }\r\n    @media(min-width: 1440px) {\r\n        font-size: ${fontsSizes.large22};\r\n    }\r\n`\r\n\r\nconst AddButton = styled.button<AddButtonProps>`\r\n    border: 0px;\r\n    background-color: transparent;\r\n    margin-left: ${dimensions.spacing40};\r\n    margin-top: ${props => props.marginTop};\r\n    color: ${props => props.color ||colors.green};\r\n    font-size: ${fontsSizes.small14};\r\n    cursor: pointer;\r\n    outline: none;\r\n    height: ${props => props.height};\r\n    width: ${props => props.width};\r\n    @media(min-width: 1280px) {\r\n        font-size: ${fontsSizes.large18};\r\n    }\r\n    @media(min-width: 1440px) {\r\n        font-size: ${fontsSizes.large22};\r\n    }\r\n`\r\n\r\n\r\n\r\n\r\n\r\nexport { DivContainer, DivTitle, Title, SubTitle, SubMenu, TitleSubMenu, UlMenu, LiMenu, AddButton }","D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Aside\\Aside.tsx",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Modal\\Modal.tsx",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\utils\\dimensions.ts",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\SearchInput\\style.ts",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Cadastro\\Cadastro.tsx",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Button\\style.ts",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Client\\style.tsx",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Client\\Client.tsx",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\QrScan\\QrScan.tsx",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Loader\\style.ts",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\ClientCardapio\\style.tsx",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\ClientCardapio\\ClientCardapio.tsx",["242"],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Cards\\style.ts",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\Inicio\\Inicio.tsx",["243","244","245","246"],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\CardsCommand\\style.ts",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\DeleteModal\\index.tsx",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\ClientCommand\\style.ts",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\pages\\ClientCommand\\ClientCommand.tsx",["247"],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\MenuMobile\\style.ts",[],"D:\\Estudo\\TCC\\Cardappio\\web\\src\\components\\Modal\\style.ts",["248","249","250","251"],{"ruleId":"252","severity":1,"message":"253","line":124,"column":21,"nodeType":"254","messageId":"255","endLine":124,"endColumn":33},{"ruleId":"252","severity":1,"message":"256","line":129,"column":17,"nodeType":"254","messageId":"255","endLine":129,"endColumn":25},{"ruleId":"252","severity":1,"message":"257","line":153,"column":9,"nodeType":"254","messageId":"255","endLine":153,"endColumn":14},{"ruleId":"252","severity":1,"message":"258","line":168,"column":9,"nodeType":"254","messageId":"255","endLine":168,"endColumn":18},{"ruleId":"259","severity":1,"message":"260","line":490,"column":6,"nodeType":"261","endLine":490,"endColumn":8,"suggestions":"262"},{"ruleId":"259","severity":1,"message":"263","line":495,"column":6,"nodeType":"261","endLine":495,"endColumn":15,"suggestions":"264"},{"ruleId":"252","severity":1,"message":"265","line":14,"column":8,"nodeType":"254","messageId":"255","endLine":14,"endColumn":14},{"ruleId":"252","severity":1,"message":"266","line":20,"column":10,"nodeType":"254","messageId":"255","endLine":20,"endColumn":20},{"ruleId":"252","severity":1,"message":"267","line":20,"column":22,"nodeType":"254","messageId":"255","endLine":20,"endColumn":35},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"252","severity":1,"message":"272","line":42,"column":11,"nodeType":"254","messageId":"255","endLine":42,"endColumn":23},{"ruleId":"259","severity":1,"message":"273","line":208,"column":6,"nodeType":"261","endLine":208,"endColumn":8,"suggestions":"274"},{"ruleId":"268","replacedBy":"275"},{"ruleId":"270","replacedBy":"276"},{"ruleId":"268","replacedBy":"277"},{"ruleId":"270","replacedBy":"278"},{"ruleId":"268","replacedBy":"279"},{"ruleId":"270","replacedBy":"280"},{"ruleId":"268","replacedBy":"281"},{"ruleId":"270","replacedBy":"282"},{"ruleId":"252","severity":1,"message":"283","line":1,"column":17,"nodeType":"254","messageId":"255","endLine":1,"endColumn":26},{"ruleId":"252","severity":1,"message":"284","line":1,"column":28,"nodeType":"254","messageId":"255","endLine":1,"endColumn":36},{"ruleId":"268","replacedBy":"285"},{"ruleId":"270","replacedBy":"286"},{"ruleId":"268","replacedBy":"287"},{"ruleId":"270","replacedBy":"288"},{"ruleId":"268","replacedBy":"289"},{"ruleId":"270","replacedBy":"290"},{"ruleId":"252","severity":1,"message":"291","line":6,"column":10,"nodeType":"254","messageId":"255","endLine":6,"endColumn":20},{"ruleId":"252","severity":1,"message":"292","line":66,"column":10,"nodeType":"254","messageId":"255","endLine":66,"endColumn":20},{"ruleId":"259","severity":1,"message":"293","line":145,"column":6,"nodeType":"261","endLine":145,"endColumn":8,"suggestions":"294"},{"ruleId":"252","severity":1,"message":"266","line":23,"column":10,"nodeType":"254","messageId":"255","endLine":23,"endColumn":20},{"ruleId":"259","severity":1,"message":"295","line":72,"column":6,"nodeType":"261","endLine":72,"endColumn":8,"suggestions":"296"},{"ruleId":"252","severity":1,"message":"297","line":27,"column":11,"nodeType":"254","messageId":"255","endLine":27,"endColumn":25},{"ruleId":"252","severity":1,"message":"298","line":1,"column":10,"nodeType":"254","messageId":"255","endLine":1,"endColumn":14},{"ruleId":"252","severity":1,"message":"299","line":51,"column":11,"nodeType":"254","messageId":"255","endLine":51,"endColumn":20},{"ruleId":"259","severity":1,"message":"300","line":80,"column":6,"nodeType":"261","endLine":80,"endColumn":8,"suggestions":"301"},{"ruleId":"252","severity":1,"message":"283","line":1,"column":17,"nodeType":"254","messageId":"255","endLine":1,"endColumn":26},{"ruleId":"252","severity":1,"message":"284","line":1,"column":28,"nodeType":"254","messageId":"255","endLine":1,"endColumn":36},{"ruleId":"252","severity":1,"message":"302","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":20},{"ruleId":"252","severity":1,"message":"303","line":5,"column":8,"nodeType":"254","messageId":"255","endLine":5,"endColumn":16},{"ruleId":"259","severity":1,"message":"304","line":149,"column":6,"nodeType":"261","endLine":149,"endColumn":8,"suggestions":"305"},{"ruleId":"252","severity":1,"message":"306","line":3,"column":30,"nodeType":"254","messageId":"255","endLine":3,"endColumn":40},{"ruleId":"252","severity":1,"message":"307","line":5,"column":11,"nodeType":"254","messageId":"255","endLine":5,"endColumn":30},{"ruleId":"252","severity":1,"message":"308","line":14,"column":11,"nodeType":"254","messageId":"255","endLine":14,"endColumn":17},{"ruleId":"252","severity":1,"message":"309","line":27,"column":11,"nodeType":"254","messageId":"255","endLine":27,"endColumn":31},"@typescript-eslint/no-unused-vars","'setAvailable' is assigned a value but never used.","Identifier","unusedVar","'setItems' is assigned a value but never used.","'teste' is assigned a value but never used.","'listItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isUserAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["310"],"React Hook useEffect has a missing dependency: 'GetCategory'. Either include it or remove the dependency array.",["311"],"'Loader' is defined but never used.","'showLoader' is assigned a value but never used.","'setShowLoader' is assigned a value but never used.","no-native-reassign",["312"],"no-negated-in-lhs",["313"],"'ITableNumber' is defined but never used.","React Hook useEffect has a missing dependency: 'GetTables'. Either include it or remove the dependency array.",["314"],["312"],["313"],["312"],["313"],["312"],["313"],["312"],["313"],"'useEffect' is defined but never used.","'useState' is defined but never used.",["312"],["313"],["312"],["313"],["312"],["313"],"'dimensions' is defined but never used.","'itemStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'commands' and 'getCommands'. Either include them or remove the dependency array.",["315"],"React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["316"],"'PriceCardProps' is defined but never used.","'Link' is defined but never used.","'LinkProps' is defined but never used.","React Hook useEffect has a missing dependency: 'getCategory'. Either include it or remove the dependency array.",["317"],"'useHistory' is defined but never used.","'SubAside' is defined but never used.","React Hook useEffect has a missing dependency: 'getCommand'. Either include it or remove the dependency array.",["318"],"'fontsSizes' is defined but never used.","'TitleComponentProps' is defined but never used.","'PProps' is defined but never used.","'AsideBackButtonProps' is defined but never used.",{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},"no-global-assign","no-unsafe-negation",{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},"Update the dependencies array to be: [isUserAuthenticated]",{"range":"333","text":"334"},"Update the dependencies array to be: [GetCategory, refresh]",{"range":"335","text":"336"},"Update the dependencies array to be: [GetTables]",{"range":"337","text":"338"},"Update the dependencies array to be: [commands, getCommands]",{"range":"339","text":"340"},"Update the dependencies array to be: [getOrders]",{"range":"341","text":"342"},"Update the dependencies array to be: [getCategory]",{"range":"343","text":"344"},"Update the dependencies array to be: [getCommand]",{"range":"345","text":"346"},[13228,13230],"[isUserAuthenticated]",[13300,13309],"[GetCategory, refresh]",[5504,5506],"[GetTables]",[3938,3940],"[commands, getCommands]",[1737,1739],"[getOrders]",[1810,1812],"[getCategory]",[3281,3283],"[getCommand]"]